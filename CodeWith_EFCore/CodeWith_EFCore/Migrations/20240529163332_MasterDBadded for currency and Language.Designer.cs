// <auto-generated />
using System;
using CodeWith_EFCore.EF_ORM;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeWith_EFCore.Migrations
{
    [DbContext(typeof(EFC_DbContext))]
    [Migration("20240529163332_MasterDBadded for currency and Language")]
    partial class MasterDBaddedforcurrencyandLanguage
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeWith_EFCore.EF_ORM.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanguagesID")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NoOfPages")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PublishedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LanguagesID");

                    b.ToTable("books");
                });

            modelBuilder.Entity("CodeWith_EFCore.EF_ORM.BookPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("bookPrices");
                });

            modelBuilder.Entity("CodeWith_EFCore.EF_ORM.Currency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("currency");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Indian INR",
                            Title = "INR"
                        },
                        new
                        {
                            ID = 2,
                            Description = "USA Dollar",
                            Title = "Dollar"
                        },
                        new
                        {
                            ID = 3,
                            Description = "Euro",
                            Title = "Euro"
                        },
                        new
                        {
                            ID = 4,
                            Description = "Japanese yen",
                            Title = "Yen"
                        });
                });

            modelBuilder.Entity("CodeWith_EFCore.EF_ORM.Language", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("languages");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "Hin Hindi",
                            Title = "Hindi"
                        },
                        new
                        {
                            ID = 2,
                            Description = "en English",
                            Title = "English"
                        },
                        new
                        {
                            ID = 3,
                            Description = "Telugu",
                            Title = "Telugu"
                        },
                        new
                        {
                            ID = 4,
                            Description = "Japanese",
                            Title = "Nihongo"
                        });
                });

            modelBuilder.Entity("CodeWith_EFCore.EF_ORM.Book", b =>
                {
                    b.HasOne("CodeWith_EFCore.EF_ORM.Language", "Languages")
                        .WithMany("Books")
                        .HasForeignKey("LanguagesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Languages");
                });

            modelBuilder.Entity("CodeWith_EFCore.EF_ORM.BookPrice", b =>
                {
                    b.HasOne("CodeWith_EFCore.EF_ORM.Book", "Books")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CodeWith_EFCore.EF_ORM.Currency", "Currencys")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Books");

                    b.Navigation("Currencys");
                });

            modelBuilder.Entity("CodeWith_EFCore.EF_ORM.Language", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
